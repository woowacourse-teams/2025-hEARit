name: Backend CI

on:
  push:
    branches: [ "develop-be", "fix/#64-ci-test-bug" ]
  pull_request:
    branches: [ "develop-be", "fix/#64-ci-test-bug" ]
    paths:
      - 'backend/**'
  workflow_dispatch:

jobs:
  build:
    name: CI Build
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_ROOT_PASSWORD: ${{ secrets.MYSQL_ROOT_PASSWORD }}
          MYSQL_DATABASE: ${{ secrets.MYSQL_DATABASE }}
          MYSQL_USER: ${{ secrets.MYSQL_USER }}
          MYSQL_PASSWORD: ${{ secrets.MYSQL_PASSWORD }}
          TZ: Asia/Seoul
        ports:
          - "13307:3306"
        options: >-
          --health-cmd="mysqladmin ping -h127.0.0.1 -P3306 -u${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    defaults:
      run:
        working-directory: backend

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: current

      - name: Generate application-secret.properties from Base64
        run: |
          mkdir -p backend/src/main/resources
          echo "${{ secrets.APPLICATION_SECRET_PROPERTIES }}" | base64 --decode > backend/src/main/resources/application-secret.properties

      - name: Wait for MySQL to be ready
        run: |
          for i in {1..10}; do
            mysqladmin ping -h127.0.0.1 -P13307 -u${{ secrets.MYSQL_USER }} -p${{ secrets.MYSQL_PASSWORD }} && echo "MySQL is ready!" && break
            echo "Waiting for MySQL..." && sleep 5
          done

      - name: Run Tests
        run: ./gradlew test

      - name: Upload JUnit Test Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: backend/build/reports/tests/test

      - name: Build with Gradle
        run: ./gradlew build -x test
